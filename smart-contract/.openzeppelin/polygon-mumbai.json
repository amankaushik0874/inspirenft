{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x61Ef39DA45582842208454d8C6d81B5760e4a566",
    "txHash": "0x4d830845bb60356868b4e2cc3961612bd281acaa132d20021db134cf8af8d550"
  },
  "proxies": [
    {
      "address": "0x674b49fad6A0F522800F354De3b49561768e83c2",
      "txHash": "0x0e3a312e28100d56ebaa9e450304453150d8d53914951718d0bf454fa548379e",
      "kind": "transparent"
    },
    {
      "address": "0xfc5C22992c24cF5D91e5AF17b8Ed24cc885b1Bd1",
      "txHash": "0x5d3a0ce19a640b5d5efea082043c51169ae6467ef8d7f6fc40e91f7d2c26a394",
      "kind": "transparent"
    },
    {
      "address": "0xe5FbA75E35Cebfd24537B2b814807a90d5AB672B",
      "txHash": "0x6f06bb8c30c819dc6936fcfb2d4c5ef9625cce1d0ed96ea881f2216deec9c56b",
      "kind": "transparent"
    },
    {
      "address": "0x2d8529FD910512294BC6FD97c03acd4672A28349",
      "txHash": "0xd3fbb73b5bfc8371c2915158f539f65ae88c044a31773885ef1abd4170c4d15b",
      "kind": "transparent"
    },
    {
      "address": "0x3C02091fBf21b7922BfcA136BaE50D10DF1714C3",
      "txHash": "0x326ca5e648157856d53352533a2901d7c509ee91828d7ae4f8ed6a4b9d986122",
      "kind": "transparent"
    },
    {
      "address": "0x9E5bC334d33Be8CdAba3a6042D8ccd3F6aF5fe21",
      "txHash": "0x2a58faef6dc8c5e8b9e0723575ec1b03a24d7bc8dd7c3d84d0eec1e2c7ff2178",
      "kind": "transparent"
    },
    {
      "address": "0xC3c396B23E40975760255d7E4155383440F4058D",
      "txHash": "0xbd03656ab6859017bc6daa23a9606aac84abe887f063cb9d795a64cce8c11b2c",
      "kind": "transparent"
    },
    {
      "address": "0x96894194dF6101913506286b24182E389348ecC6",
      "txHash": "0xc71224433db0e9aa63f6f59b37f746d1af4fbf4846b28620d3f0e07cd5797431",
      "kind": "transparent"
    },
    {
      "address": "0x007d798B2D1106e9A16f9F774b6fDA53febF90c6",
      "txHash": "0x49f44795d8d1917d0b7d3aa8cf39f7d0d379fa11c0b6f7c3774787739574f371",
      "kind": "uups"
    },
    {
      "address": "0xC5096957B170d7dF44f28e2ca3a5329bA6dA9e67",
      "txHash": "0x00ec93dc42153b69f09a05ca564cd76a2a630d00b991954ac1bf624a4a21280e",
      "kind": "uups"
    },
    {
      "address": "0xb3fb4f035988A634BF459a35eB23659173BB9d7e",
      "txHash": "0x3a243546e1d948d5e310f2447daaad4b6bbf7f45cd2469428a9e63ed1c2b69f3",
      "kind": "uups"
    },
    {
      "address": "0x53be1F98a61FE42B7b2E0656Aba9ea739f74B5D8",
      "txHash": "0x428913ed98fae8cbc080fbec75990c8b503ee7921d6e67d7935de0968c20b25d",
      "kind": "uups"
    },
    {
      "address": "0x875836ffE449E080770C883A0F0F7516680F4dE5",
      "txHash": "0xd94ed6ab6cea503e43b289ac1af51fb90e591e432f0bcf95f15a15af716f22d5",
      "kind": "uups"
    },
    {
      "address": "0xDA4FD8d6A48f0532484C42A010df76c6532ec561",
      "txHash": "0x22acaea7caa7f7e69277142464cb2a40759713ef06bfbb6d367832133d6f8871",
      "kind": "uups"
    },
    {
      "address": "0x78A3BC103b916A244baB6Aa76aeA935FAA988eDf",
      "txHash": "0x7a8a2c372490f0bc539b311316d6b8925c6af54279493f731e62b566609c1aa7",
      "kind": "uups"
    },
    {
      "address": "0xB33A12dcFA1af607C3e2cec751678f36aAf95F46",
      "txHash": "0xfa1ba425ae4dee7156e26c948c823c15968d98c75e0c5863a77957e7b3624e60",
      "kind": "uups"
    },
    {
      "address": "0xa020ef7007aEF1cB0DB17a5Cbad2Ae966BF96778",
      "txHash": "0x855336136c2245871e090ecc711694a0c74f63435f163f080be4aa8400460176",
      "kind": "uups"
    },
    {
      "address": "0xc1feb2012e77d33d5d20553d11C27992F47C6B0b",
      "txHash": "0x9532ec0e60f8396e9a28c019c5705ce0153e0ce600b092213e55034cb766fa29",
      "kind": "uups"
    }
  ],
  "impls": {
    "efdc2da90842034dca803749594d44eeaa66f2235d1526430eb092c58da76464": {
      "address": "0x37Af1305508f2B58CD8e1E819B57990e5a5e2C01",
      "txHash": "0x35a881c0aedf65e82dd2a8b66c9e1a5d9cc5d5e79fd07117a6d77e04ca5c79e4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_struct(Nft)3165_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:14"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(Collection)3176_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:15"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3165_storage)dyn_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:16"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(Collection)3176_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:17"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:18"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "306",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3165_storage)dyn_storage": {
            "label": "struct InspireNFT.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3165_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3176_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3165_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3176_storage": {
            "label": "struct InspireNFT.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3165_storage": {
            "label": "struct InspireNFT.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fileHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fileSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fileType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "fileName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "externalId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fcbcc50e29be5f82608746bb06059840aa4c2534da72a4c237705aa1ba8b8a28": {
      "address": "0x2A08d2C48D1e8fdAFdd528F2dE2E00f8b1c36EEF",
      "txHash": "0xc1096f687daf364a6f8e5fa19cdd6f9c49e45bf99cd3676801864fcd1534af26",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_struct(Nft)3165_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:19"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(Collection)3176_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:20"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3165_storage)dyn_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:21"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(Collection)3176_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:22"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:23"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "306",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3165_storage)dyn_storage": {
            "label": "struct InspireNFT.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3165_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3176_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3165_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3176_storage": {
            "label": "struct InspireNFT.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3165_storage": {
            "label": "struct InspireNFT.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fileHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fileSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fileType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "fileName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "externalId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1636fb68ada3b1ecc72f249b221a18373584dfa24fb0f4e33b838f8c0ea9e8db": {
      "address": "0xA0B7432e53327968EAE31Af2c30CC0C35Be09d9A",
      "txHash": "0x398a547183d29dbb1424fbcf8eeb0873e8ff1f2de60bfec1ea827f9e8626e96e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_struct(Nft)3165_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:19"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(Collection)3176_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:20"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3165_storage)dyn_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:21"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(Collection)3176_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:22"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:23"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "306",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3165_storage)dyn_storage": {
            "label": "struct InspireNFT.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3165_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3176_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3165_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3176_storage": {
            "label": "struct InspireNFT.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3165_storage": {
            "label": "struct InspireNFT.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fileHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fileSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fileType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "fileName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "externalId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "94115b6284a1a45d88a8fd3bcd5b7632ea8aa00d8902bc6ac4ba8bf36d003378": {
      "address": "0xaBD1A8E42dEc9bF832b5Ec76b36228Ae393Fc355",
      "txHash": "0x604e959ed256312f07e16dc1490a35e8a15827b8c8edf38e716f4f1b4f052a37",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_struct(Nft)3167_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:19"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:20"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:21"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:22"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:23"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "306",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:24"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3167_storage)dyn_storage": {
            "label": "struct InspireNFT.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3178_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3167_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3178_storage": {
            "label": "struct InspireNFT.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3167_storage": {
            "label": "struct InspireNFT.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fileHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fileSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fileType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "fileName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "externalId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "283d06779a1929d2447cc4b738fc3e4db58974a5b31e4052d73495e4ae3ca914": {
      "address": "0xBB85faA252395517FF2e1e7FA593c6b6254f636f",
      "txHash": "0x6b5b6010ceec707e50958e548f22bff034fe9f60e70220e84f6bb172e6c5fcf1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_struct(Nft)3167_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:19"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:20"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:21"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:22"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:23"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "306",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:24"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3167_storage)dyn_storage": {
            "label": "struct InspireNFT.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3178_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3167_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3178_storage": {
            "label": "struct InspireNFT.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3167_storage": {
            "label": "struct InspireNFT.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fileHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fileSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fileType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "fileName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "externalId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "280d3e04218ea5be9e1793e043dca4cf9164cbaff96a87e75436b1a60f6db834": {
      "address": "0xcB4Bc07308e0121e0908aB281116778b5f7294aC",
      "txHash": "0xada4bdbb1eaf137a98666a49110b072a5e2079649068b2675619e84d70b5c531",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_struct(Nft)3167_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:19"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:20"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:21"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:22"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:23"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "306",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:24"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3167_storage)dyn_storage": {
            "label": "struct InspireNFT.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3178_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3167_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3178_storage": {
            "label": "struct InspireNFT.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3167_storage": {
            "label": "struct InspireNFT.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fileHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fileSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fileType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "fileName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "externalId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "986505480f426914db3eab67eb888925f8bff832fec457fcf4e22fac135e4108": {
      "address": "0xC6562514125f214E3DA384eeb32abFcAe2A68039",
      "txHash": "0x73265cecf7e756293f4b235e68bb0808b51efc60e9f4e5512f7455c3ce742386",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_uint256,t_struct(Nft)3167_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:18"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:19"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:20"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:21"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "405",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:22"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "406",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3167_storage)dyn_storage": {
            "label": "struct InspireNFT.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3178_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3167_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3178_storage": {
            "label": "struct InspireNFT.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3167_storage": {
            "label": "struct InspireNFT.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fileHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fileSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fileType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "fileName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "externalId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b8a5c052c201992dfa640fccbe0c4630b32dad6e419da408e1d687993fd1975c": {
      "address": "0x13D4B0A1d28FCF93d454a409Fd5c11Ac63107a32",
      "txHash": "0xb7484b978b4916e6847fa198eb7ccc454395b4393629eeef4088bcd7f453be02",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_uint256,t_struct(Nft)3167_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:18"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:19"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:20"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:21"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "405",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:22"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "406",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3167_storage)dyn_storage": {
            "label": "struct InspireNFT.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3178_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3167_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3178_storage": {
            "label": "struct InspireNFT.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3167_storage": {
            "label": "struct InspireNFT.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fileHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fileSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fileType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "fileName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "externalId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5124f7cfcc878f14bc9c0d97d303140ce0fbbb500647ee2d3b6ee2c5769cee1d": {
      "address": "0xd401F3B1D5f26C1f4b8b8dcC50A8E6a5ea3CD2C7",
      "txHash": "0xd29fdaa31884bd9e3d7c9e73f54175faf4da335511eeae5cd8ac395c089b2671",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_uint256,t_struct(Nft)3167_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:18"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:19"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:20"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_struct(Collection)3178_storage)",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:21"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "405",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:22"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "406",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT",
            "src": "contracts\\InspireNFT.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3167_storage)dyn_storage": {
            "label": "struct InspireNFT.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3167_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3178_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3167_storage)": {
            "label": "mapping(uint256 => struct InspireNFT.Nft)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3178_storage": {
            "label": "struct InspireNFT.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3167_storage": {
            "label": "struct InspireNFT.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fileHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fileSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fileType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "fileName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "externalId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d1e9927b6a038f3f8e85451f194a9f24e07c307db3db66d5fe39448cd1b87b01": {
      "address": "0xdA04809ea9a555D2db0f767Da21a9C0A7eda9D75",
      "txHash": "0x51c0b90f0256eb4318794aea122011587afbc83cf12ea3f0d09661b8999a216d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_struct(Nft)3926_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:17"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Collection)3937_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:18"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3926_storage)dyn_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:19"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(Collection)3937_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:20"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "205",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:21"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:22"
          },
          {
            "label": "baseTokenUri",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:23"
          },
          {
            "label": "baseTokenUriExt",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3926_storage)dyn_storage": {
            "label": "struct InspireNFT2.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3926_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3937_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3926_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Nft)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3937_storage": {
            "label": "struct InspireNFT2.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3926_storage": {
            "label": "struct InspireNFT2.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f37af09d1d41e6279eeef4dc996bad5dbfd65f95e84d427c5f69c28c37f4f196": {
      "address": "0xDbb020fd22F48F80Bc35c74fDdBBe07B00A80952",
      "txHash": "0xa4563d02dfb92746e9f394c06865b38e48ac450d08c5bfdcbcef23f8b8261721",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_struct(Nft)3931_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:20"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Collection)3942_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:21"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3931_storage)dyn_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:22"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(Collection)3942_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:23"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "205",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:24"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:25"
          },
          {
            "label": "baseTokenUri",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:26"
          },
          {
            "label": "baseTokenUriExt",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3931_storage)dyn_storage": {
            "label": "struct InspireNFT2.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3931_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3942_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3931_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Nft)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3942_storage": {
            "label": "struct InspireNFT2.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3931_storage": {
            "label": "struct InspireNFT2.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b938befd5f248f9c7293b5992d5a024bee8fe189c2661baba7645e678b396af6": {
      "address": "0x32212ADC1484A8d143d8c655A5D630e3d3b93E95",
      "txHash": "0x515235187d411f53ec0f39e4a53cc1599a48b93a8c38ad47dbe2c4713b90b609",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_struct(Nft)3931_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:20"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Collection)3942_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:21"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3931_storage)dyn_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:22"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(Collection)3942_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:23"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "205",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:24"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:25"
          },
          {
            "label": "baseTokenUri",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:26"
          },
          {
            "label": "baseTokenUriExt",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3931_storage)dyn_storage": {
            "label": "struct InspireNFT2.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3931_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3942_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3931_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Nft)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3942_storage": {
            "label": "struct InspireNFT2.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3931_storage": {
            "label": "struct InspireNFT2.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "df77749aa2867f14bc35487556eeec0cf3eb65178a7ae59ab226c12442d899f3": {
      "address": "0x195db726F2d6f1b34f406188253C1F193eE695bB",
      "txHash": "0x9be9e2d7709ee2d836feb7d195e59986fc97507dc7c468f7a9420ffa01d9447b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "nfts",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_struct(Nft)3931_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:20"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Collection)3942_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:21"
          },
          {
            "label": "collectionNfts",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_array(t_struct(Nft)3931_storage)dyn_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:22"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(Collection)3942_storage)",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:23"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "205",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:24"
          },
          {
            "label": "_collectionIdCounter",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)3027_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:25"
          },
          {
            "label": "baseTokenUri",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:26"
          },
          {
            "label": "baseTokenUriExt",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "InspireNFT2",
            "src": "contracts\\InspireNFT2.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Nft)3931_storage)dyn_storage": {
            "label": "struct InspireNFT2.Nft[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_struct(Nft)3931_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Nft[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Collection)3942_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Collection)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Nft)3931_storage)": {
            "label": "mapping(uint256 => struct InspireNFT2.Nft)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Collection)3942_storage": {
            "label": "struct InspireNFT2.Collection",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "imgLink",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)3027_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Nft)3931_storage": {
            "label": "struct InspireNFT2.Nft",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uploadTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
